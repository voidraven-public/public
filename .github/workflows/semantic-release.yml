name: Semantic Release
run-name: Semantic Release

on:
  workflow_call:

  # workflow_dispatch:
  # push:

permissions:
  actions: read
  contents: write
  issues: write

jobs:
  create-version:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js to use semantic-release for versioning
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install semantic-release @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/git @semantic-release/github @semantic-release/release-notes-generator

      - name: Semantic Version Tag
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: npx semantic-release --plugins=@semantic-release/commit-analyzer,@semantic-release/release-notes-generator,@semantic-release/changelog,@semantic-release/git

  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get tag name
        id: get_tag_name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate Release Notes
        uses: actions/github-script@v6
        id: generate_release_notes
        with:
          script: |
            const { owner, repo } = context.repo;
            const tag = "${{ steps.get_tag_name.outputs.TAG_NAME }}";
            const response = await github.rest.repos.generateReleaseNotes({
              owner,
              repo,
              tag_name: tag,
            });
            return response.data.body;

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag_name.outputs.TAG_NAME }}
          release_name: Release ${{ steps.get_tag_name.outputs.TAG_NAME }}
          body: ${{ steps.generate_release_notes.outputs }}
          draft: false
          prerelease: ${{ startsWith(steps.get_tag_name.outputs.TAG_NAME, 'v0.') }}